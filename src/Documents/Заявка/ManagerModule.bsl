////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Изменение цен номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаявкаНаСырье";
	КомандаПечати.Представление = НСтр("ru = 'Заявка на сырье'");
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "КП";
	КомандаПечати.Представление = НСтр("ru = 'КП'");
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТехнологияПроизводства";
	КомандаПечати.Представление = НСтр("ru = 'Технология производства'");
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаказНаряд";
	КомандаПечати.Представление = НСтр("ru = 'Заказ наряд'");
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыЗаявкиНаСырье()
	 ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗаявкаСырье.Ссылка,
	|	ЗаявкаСырье.НомерСтроки,
	|	ЗаявкаСырье.Номенклатура,
	|	ЗаявкаСырье.Количество,
	|	ЗаявкаСырье.ЕдиницаИзмерения,
	|	ЗаявкаСырье.Цена,
	|	ЗаявкаСырье.Сумма,
	|	ЗаявкаСырье.Цвет,
	|	ЗаявкаСырье.Ссылка.Номер,
	|	ЗаявкаСырье.Ссылка.Дата
	|ИЗ
	|	Документ.Заявка.Сырье КАК ЗаявкаСырье
	|ГДЕ
	|	ЗаявкаСырье.Ссылка В(&МассивОбъектов)";
		
	Возврат ТекстЗапроса;
	
КонецФункции



Функция ПечатьЗаявкиНаСырье(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка_ЗаявкаНаСырье";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыЗаявкиНаСырье();
	Шапка = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Заявка.МакетЗаявкаНаСырье");
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной

        ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка.Параметры.НомерЗаявки = Шапка.Номер;
		ТабличныйДокумент.Вывести(ОбластьШапка);

		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");

		// Выведем таблицу
		ИтогСумма = 0;
		Пока Шапка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			ИтогСумма = ИтогСумма+Шапка.Сумма;
			
		КонецЦикла;
		
		ОбластьИтог = Макет.ПолучитьОбласть("Итого");
		
		ОбластьИтог.Параметры.ИтогСумма = ИтогСумма;
		ТабличныйДокумент.Вывести(ОбластьИтог);
	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьДокумента()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявкаНаСырье") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаявкаНаСырье", НСтр("ru='Заявка на сырье'"), ПечатьЗаявкиНаСырье(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КП") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "КП", НСтр("ru='КП'"), ПечатьКоммерческогоПредложения(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТехнологияПроизводства") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТехнологияПроизводства", НСтр("ru='Технология производства'"), ПечатьТехнологииПроизводства(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказНаряд") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаказНаряд", НСтр("ru='Заказ наряд'"), ПечатьЗаказНаряда(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаДляФормированияЗаказНаряда()
	 ТекстЗапроса = 	
	 "ВЫБРАТЬ
	 |	ЗаявкаКонструкции.Ссылка,
	 |	ЗаявкаКонструкции.Ссылка.Номер,
	 |	ЗаявкаКонструкции.Ссылка.Дата,
	 |	ЗаявкаКонструкции.Ссылка.Сделка,
	 |	ЗаявкаКонструкции.Ссылка.Контрагент,
	 |	ЗаявкаКонструкции.НомерСтроки,
	 |	ЗаявкаКонструкции.Номенклатура,
	 |	ЗаявкаКонструкции.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	 |	ЗаявкаКонструкции.Количество,
	 |	ЗаявкаКонструкции.Спецификация,
	 |	ЗаявкаКонструкции.Цена,
	 |	ЗаявкаКонструкции.Сумма
	 |ИЗ
	 |	Документ.Заявка.Конструкции КАК ЗаявкаКонструкции
	 |ГДЕ
	 |	ЗаявкаКонструкции.Ссылка В(&МассивОбъектов)";

		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьЗаказНаряда(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка_ЗаказНаряд";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияЗаказНаряда();
	Шапка = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Заявка.МакетЗаказНаряд");

		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной

        ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.НомерДоговора = Шапка.Ссылка.НомерДоговора;
		ОбластьШапка.Параметры.ДатаДоговора = Формат(Шапка.Ссылка.ДатаПодписанияДоговора,"ДФ=dd.MM.yyyy");
		ОбластьШапка.Параметры.Номенклатура = Шапка.Номенклатура;
		ТабличныйДокумент.Вывести(ОбластьШапка);

		СтатЧасть = Макет.ПолучитьОбласть("СтатЧасть");
		СтатЧасть.Параметры.Количество = Шапка.Количество;
		ТабличныйДокумент.Вывести(СтатЧасть);
		НС = 3;
		ОбластьМатериал = Макет.ПолучитьОбласть("Материал");
		Для каждого Стр Из Шапка.Спецификация.Комплектующие Цикл
			Если Стр.Отображать Тогда
				ОбластьМатериал.Параметры.Материал = Стр.Номенклатура;
				ОбластьМатериал.Параметры.Значение = Стр.Количество;
				ОбластьМатериал.Параметры.НС = НС;
				ТабличныйДокумент.Вывести(ОбластьМатериал);
				НС = НС+1;
			КонецЕсли; 
		КонецЦикла; 
		
		ОбластьСвойство = Макет.ПолучитьОбласть("Свойство");
		Для каждого Стр Из Шапка.Номенклатура.ДополнительныеРеквизиты Цикл
			ОбластьСвойство.Параметры.Свойство = Стр.Свойство.Заголовок;
			ОбластьСвойство.Параметры.Значение = Стр.Значение;
			ОбластьСвойство.Параметры.НС = НС;
			ТабличныйДокумент.Вывести(ОбластьСвойство);
			НС = НС+1;
		КонецЦикла; 

		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.НС1 = НС+1;
		ОбластьПодвал.Параметры.НС2 = НС+2;
		ОбластьПодвал.Параметры.НС3 = НС+3;
		ОбластьПодвал.Параметры.НС4 = НС+4;
		ОбластьПодвал.Параметры.НС5 = НС+5;
		ОбластьПодвал.Параметры.Менеджер = ПолучитьКонтактныеДанные(Шапка.Контрагент.МенеджерПроекта);
		ОбластьПодвал.Параметры.Заказчик = Шапка.Контрагент.Заказчик;
		ОбластьПодвал.Параметры.ПланДата = Формат(Шапка.Ссылка.СрокПроизводстваПлан,"ДФ=dd.MM.yyyy");
		ОбластьПодвал.Параметры.ФактДата = Формат(Шапка.Ссылка.СрокПроизводстваФакт,"ДФ=dd.MM.yyyy");
		ОбластьПодвал.Параметры.ДатаПодписания = Формат(Шапка.Ссылка.ФактическаяДатаДоговора,"ДФ=dd.MM.yyyy");
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьДокумента()

Функция ПолучитьКонтактныеДанные(Об)
	
	Представление = Об.Наименование;
	
	Телефоны = УправлениеКонтактнойИнформацией.ЗначенияКонтактнойИнформацииОбъекта(Об, Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	Для каждого Стр Из Телефоны Цикл
		Представление = Представление+", "+Стр.Значение;
	КонецЦикла; 
	
	Почты = УправлениеКонтактнойИнформацией.ЗначенияКонтактнойИнформацииОбъекта(Об, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Для каждого Стр Из Почты Цикл
		Представление = Представление+", "+Стр.Значение;
	КонецЦикла;
	
	Возврат Представление;
		
КонецФункции
 

Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыКП()
	 ТекстЗапроса = 	
	 "ВЫБРАТЬ
	|	ЗаявкаКонструкции.Ссылка,
	|	ЗаявкаКонструкции.Ссылка.Номер,
	|	ЗаявкаКонструкции.Ссылка.Дата,
	|	ЗаявкаКонструкции.Ссылка.Сделка,
	|	ЗаявкаКонструкции.НомерСтроки,
	|	ЗаявкаКонструкции.Номенклатура,
	|	ЗаявкаКонструкции.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаявкаКонструкции.Количество,
	|	ЗаявкаКонструкции.Спецификация,
	|	ЗаявкаКонструкции.Цена,
	|	ЗаявкаКонструкции.Сумма
	|ИЗ
	|	Документ.Заявка.Конструкции КАК ЗаявкаКонструкции
	|ГДЕ
	|	ЗаявкаКонструкции.Ссылка В(&МассивОбъектов)";

		
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ПечатьКоммерческогоПредложения(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка_КП";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыКП();
	Шапка = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если Шапка.Сделка = Перечисления.ВидыСделок.Продажа Тогда
		    Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Заявка.МакетКППродажа");
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Заявка.МакетКППроект");
		КонецЕсли; 
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной

        ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
		ТабличныйДокумент.Вывести(ОбластьШапка);

		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");

		// Выведем таблицу
		ИтогСумма = 0;
		Пока Шапка.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(Шапка);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
			ИтогСумма = ИтогСумма+Шапка.Сумма;
			
		КонецЦикла;
		
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьИтого.Параметры.ИтогСумма = ИтогСумма;
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьДокумента()

Функция ПолучитьТекстЗапросаДляФормированияПечатнойТехнологииПроизводства()
	 ТекстЗапроса = 
	
	"ВЫБРАТЬ
	|	ЗаявкаКонструкции.Ссылка,
	|	ЗаявкаКонструкции.Ссылка.Номер,
	|	ЗаявкаКонструкции.Ссылка.Дата,
	|	ЗаявкаКонструкции.Ссылка.Сделка,
	|	ЗаявкаКонструкции.НомерСтроки,
	|	ЗаявкаКонструкции.Номенклатура,
	|	ТехнологииПроизводстваПроцессы.Процесс КАК Операция
	|ИЗ
	|	Документ.Заявка.Конструкции КАК ЗаявкаКонструкции
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТехнологииПроизводства.Процессы КАК ТехнологииПроизводстваПроцессы
	|		ПО ЗаявкаКонструкции.Номенклатура.ОсновнаяТехнология = ТехнологииПроизводстваПроцессы.Ссылка
	|ГДЕ
	|	ЗаявкаКонструкции.Ссылка В(&МассивОбъектов)";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьТехнологииПроизводства(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка_ТехнологияПроизводства";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойТехнологииПроизводства();
	Шапка = Запрос.Выполнить().Выбрать();
	ПервыйДокумент = Истина;
	Пока Шапка.СледующийПоЗначениюПоля("Номенклатура") Цикл
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.Заявка.МакетТехнологияПроизводства");
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной

        ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка.Параметры.Конструкция = Шапка.Номенклатура;
		ОбластьШапка.Параметры.НомерЗаявки = Шапка.Номер;
		ТабличныйДокумент.Вывести(ОбластьШапка);

		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");

		// Выведем таблицу
		НС = 0;
		Пока Шапка.Следующий() Цикл
			НС = НС+1;
			ОбластьСтрока.Параметры.Заполнить(Шапка);
			ОбластьСтрока.Параметры.НомерСтроки = НС;
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьДокумента()