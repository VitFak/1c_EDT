
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Статус = Перечисления.СтатусыЗаявок.НеПодписано;
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конструкции", Объект.Конструкции.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Конструкции.Номенклатура,
	|	ЕСТЬNULL(Конструкции.Количество, 0) КАК Количество,
	|	Конструкции.Спецификация
	|ПОМЕСТИТЬ ВТКонструкции
	|ИЗ
	|	&Конструкции КАК Конструкции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацииКомплектующие.Номенклатура,
	|	СпецификацииКомплектующие.Количество / ЕСТЬNULL(СпецификацииКомплектующие.Ссылка.Количество, 1) * ВТКонструкции.Количество КАК Количество,
	|	СпецификацииКомплектующие.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпецификацииКомплектующие.Цвет,
	|	ВТКонструкции.Номенклатура КАК Конструкция
	|ПОМЕСТИТЬ ВТСырье
	|ИЗ
	|	ВТКонструкции КАК ВТКонструкции
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Спецификации.Комплектующие КАК СпецификацииКомплектующие
	|		ПО ВТКонструкции.Спецификация = СпецификацииКомплектующие.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСырье.Номенклатура КАК Номенклатура,
	|	СУММА(ВТСырье.Количество) КАК Количество,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ВТСырье.ЕдиницаИзмерения,
	|	ВТСырье.Цвет,
	|	ЦеныНоменклатурыСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность,
	|	ВТСырье.Конструкция
	|ИЗ
	|	ВТСырье КАК ВТСырье
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекДата, ) КАК ЦеныНоменклатурыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ТекДата, ) КАК КурсыВалютСрезПоследних
	|			ПО ЦеныНоменклатурыСрезПоследних.Валюта = КурсыВалютСрезПоследних.Валюта
	|		ПО ВТСырье.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСырье.ЕдиницаИзмерения,
	|	ВТСырье.Номенклатура,
	|	ВТСырье.Цвет,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЦеныНоменклатурыСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность,
	|	ВТСырье.Конструкция
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	Запрос.УстановитьПараметр("ТекДата",Объект.Дата);
 
	
	СписокСырья = Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр Из СписокСырья Цикл
		НовСтр = Объект.Сырье.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
		НовСтр.Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(
		НовСтр.Цена, 
		Новый Структура("Валюта, Курс, Кратность", Стр.Валюта, Стр.Курс, Стр.Кратность),
		Новый Структура("Валюта, Курс, Кратность", Константы.ВалютаРегламентированногоУчета.Получить(), 1, 1));
		НовСтр.Сумма = НовСтр.Количество*НовСтр.Цена;
	КонецЦикла; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если ПроверитьКонструкцииНаСервере() Тогда
		возврат;
	КонецЕсли; 
	Если Объект.Сырье.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Перед заполнением табличная часть будет очищена.
		|Заполнить?'") ;
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗаполнениемТабличнойЧастиЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	Иначе
		ЗаполнитьНаСервере();
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьКонструкцииНаСервере()
	МассивСтрок = Объект.Конструкции.НайтиСтроки(Новый Структура("Спецификация",Справочники.Спецификации.ПустаяСсылка()));
	
	Ошибка = Ложь;
	Для каждого Стр Из МассивСтрок Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбрана спецификация";
		Сообщение.Поле = "Объект.Конструкции["+(Стр.НомерСтроки-1)+"].Спецификация";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить(); 
		Ошибка = Истина;
	КонецЦикла; 
	Возврат Ошибка;
КонецФункции


&НаКлиенте
Процедура ВопросПередЗаполнениемТабличнойЧастиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
				
		Объект.Сырье.Очистить();
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КонструкцииНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Конструкции.ТекущиеДанные;
	
	ТекущаяСтрока.Свойства = ПолучитьСвойства(ТекущаяСтрока.Номенклатура);
	
	КонструкцииНоменклатураПриИзмененииНаСервере(ТекущаяСтрока.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Функция ПолучитьСвойства(Номенклатура)
	
	Свойства = "";
	
	Для каждого Стр Из Номенклатура.ДополнительныеРеквизиты Цикл
		Свойства = Свойства+Стр.Свойство.Заголовок+": "+Стр.Значение+Символы.ПС;
	КонецЦикла; 
	Возврат Свойства;
КонецФункции

&НаСервере
Процедура ОбновитьДанныеКолонкиСвойства()
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураДополнительныеРеквизиты.Свойство,
	|	НоменклатураДополнительныеРеквизиты.Значение,
	|	НоменклатураДополнительныеРеквизиты.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В(&СписокНоменклатуры)"
	);
	Запрос.УстановитьПараметр("СписокНоменклатуры",Объект.Конструкции.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Каждого Стр Из Объект.Конструкции Цикл
		Свойства = "";
		Пока Выборка.НайтиСледующий(Стр.Номенклатура,"Номенклатура") Цикл
			Свойства = Свойства+Выборка.Свойство.Заголовок+": "+Выборка.Значение+Символы.ПС;
			Стр.Свойства = Свойства;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
 

&НаСервере
Процедура КонструкцииНоменклатураПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Конструкции.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекущаяСтрока.Спецификация = ТекущаяСтрока.Номенклатура.ОсновнаяСпецификация;
	ТекущаяСтрока.Цена = Ценообразование.ПолучитьЦену(ТекущаяСтрока.Номенклатура,ТекущаяСтрока.Спецификация);
	
	
	ОбработатьСтрокуТЧ(ТекущаяСтрока);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока)
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество*ТекущаяСтрока.Цена;
КонецПроцедуры

&НаКлиенте
Процедура КонструкцииКоличествоПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Конструкции.ТекущиеДанные;
	КонструкцииКоличествоПриИзмененииНаСервере(ТекущаяСтрока.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура КонструкцииКоличествоПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Конструкции.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ОбработатьСтрокуТЧ(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура КонструкцииЦенаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Конструкции.ТекущиеДанные;
	
	КонструкцииЦенаПриИзмененииНаСервере(ТекущаяСтрока.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура КонструкцииЦенаПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Конструкции.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ОбработатьСтрокуТЧ(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КонструкцииСпецификацияПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Конструкции.ТекущиеДанные;

	КонструкцииСпецификацияПриИзмененииНаСервере(ТекущаяСтрока.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура КонструкцииСпецификацияПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Конструкции.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекущаяСтрока.Цена = ПолучитьЦенуКонструкции(ТекущаяСтрока.Номенклатура);//Ценообразование.ПолучитьЦену(ТекущаяСтрока.Номенклатура,ТекущаяСтрока.Спецификация);
	
	ОбработатьСтрокуТЧ(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СырьеТипЦеныСырьяПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Сырье.ТекущиеДанные;
	СырьеТипЦеныСырьяПриИзмененииНаСервере(ТекущаяСтрока.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура СырьеТипЦеныСырьяПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Сырье.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если ТекущаяСтрока.ТипЦеныСырья = Перечисления.ТипыЦенСырья.Динамический Тогда
		СырьеКоличествоЗакупкиПриИзмененииНаСервере(ИдентификаторСтроки);
	Иначе
	    ТекущаяСтрока.Цена = Ценообразование.ПолучитьЦену(ТекущаяСтрока.Номенклатура,Справочники.Спецификации.ПустаяСсылка());
	КонецЕсли; 
	
	ОбработатьСтрокуТЧ(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СырьеКоличествоЗакупкиПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Сырье.ТекущиеДанные;
	СырьеКоличествоЗакупкиПриИзмененииНаСервере(ТекущаяСтрока.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура СырьеКоличествоЗакупкиПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Сырье.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекущаяСтрока.Цена = Ценообразование.ПолучитьДинамическуюЦену(Объект.Дата,ТекущаяСтрока.Номенклатура,ТекущаяСтрока.КоличествоЗакупки);
	
	ОбработатьСтрокуТЧ(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СырьеНоменклатураПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Сырье.ТекущиеДанные;

	СырьеНоменклатураПриИзмененииНаСервере(ТекущаяСтрока.ПолучитьИдентификатор());
КонецПроцедуры

&НаСервере
Процедура СырьеНоменклатураПриИзмененииНаСервере(ИдентификаторСтроки)
	ТекущаяСтрока = Объект.Сырье.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекущаяСтрока.Цена = Ценообразование.ПолучитьЦену(ТекущаяСтрока.Номенклатура,Справочники.Спецификации.ПустаяСсылка());	
	ТекущаяСтрока.ТипЦеныСырья = Перечисления.ТипыЦенСырья.Статический;
КонецПроцедуры

&НаКлиенте
Процедура СырьеКоличествоПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Сырье.ТекущиеДанные;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена*ТекущаяСтрока.Количество;
КонецПроцедуры

&НаКлиенте
Процедура СырьеЦенаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Сырье.ТекущиеДанные;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена*ТекущаяСтрока.Количество;
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦеныНаСервере()
	Для каждого Стр Из Объект.Конструкции Цикл
		Стоимость = ПолучитьЦенуКонструкции(Стр.Номенклатура);
		Стр.Сумма = Стоимость+(Стоимость*(Объект.Наценка/100));
		Стр.Цена = ?(Стр.Количество = 0,0,Стр.Сумма/Стр.Количество);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЦены(Команда)
	Если Модифицированность ИЛИ Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Для заполнения цен необходимо записать документ.
		|Продолжить?'") ;
		Оповещение = Новый ОписаниеОповещения("ВопросОбновитьЦеныЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	Иначе
		ОбновитьЦеныНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОбновитьЦеныЗавершение(Результат,Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
		ОбновитьЦеныНаСервере();
	КонецЕсли;
КонецПроцедуры


&НаСервере
Функция ПолучитьЦенуКонструкции(Конструкция)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЗаявкаСырье.Сумма) КАК Сумма,
		|	ЗаявкаСырье.Конструкция
		|ИЗ
		|	Документ.Заявка.Сырье КАК ЗаявкаСырье
		|ГДЕ
		|	ЗаявкаСырье.Ссылка = &ТекСсылка
		|   И ЗаявкаСырье.Конструкция = &Конструкция
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаСырье.Конструкция";
	Запрос.УстановитьПараметр("ТекСсылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("Конструкция",Конструкция);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Сумма;
	Иначе
		Возврат 0;
	КонецЕсли; 
	
КонецФункции

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ОбновитьДанныеКолонкиСвойства();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьДанныеКолонкиСвойства();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьДанныеКолонкиСвойства();
КонецПроцедуры
 



